#ifdef SYSCALL

#define SYSCALLSEP SYSCALL
#define SYSCALL0 SYSCALL
#define SYSCALL1 SYSCALL
#define SYSCALL2 SYSCALL
#define SYSCALL3 SYSCALL
#define SYSCALL4 SYSCALL
#define SYSCALL5 SYSCALL

#endif // SYSCALL

SYSCALL1(close, int, int, fd)
SYSCALL2(creat, int, const char *, path, mode_t, mode)
SYSCALL3(read, ssize_t, int, fd, void *, buf, size_t, count)
SYSCALL3(write, ssize_t, int, fd, const void *, buf, size_t, count)
SYSCALL4(pread, ssize_t, int, fd, void *, buf, size_t, count, off_t, offset)
SYSCALL4(pwrite, ssize_t, int, fd, const void *, buf, size_t, count, off_t, offset)
SYSCALL3(lseek, off_t, int, fildes, off_t, offset, int, whence)
SYSCALL1(dup, int, int, oldfd)
SYSCALL2(dup2, int, int, fildes, int, fildes2)
SYSCALL2(ftruncate, int, int, fd, off_t, length)
SYSCALL2(truncate, int, const char *, path, off_t, length)
SYSCALL1(rmdir, int, const char *, pathname)
SYSCALL1(unlink, int, const char *, path)
SYSCALL3(unlinkat, int, int, dirfd, const char *, path, int, flags)
SYSCALL2(link, int, const char *, target, const char *, linkpath)
SYSCALL5(linkat, int, int, olddirfd, const char *, target, int, newdirfd, const char *, linkpath, int, flags)
SYSCALL2(symlink, int, const char *, path1, const char *, path2)
SYSCALL3(symlinkat, int, const char *, target, int, newdirfd, const char *, linkpath)
SYSCALL3(readlink, ssize_t, const char *, pathname, char *, buf, size_t, bufsiz)
SYSCALL4(readlinkat, ssize_t, int, dirfd, const char *,path, char *,buf, size_t, count)
SYSCALL2(access, int, const char *, pathname, int, mode)
SYSCALL1(chdir, int, const char *, path)
SYSCALL4(faccessat, int, int, dirfd, const char *, path, int, mode, int, flags)
SYSCALL1(fsync, int, int, fd)
SYSCALL1(fdatasync, int, int, fd)
SYSCALL1(fchdir, int, int, fd)
SYSCALL1(syncfs, int, int, fd)
SYSCALL2(fstat, int, int, fd, struct stat *, buf)
SYSCALL2(fstatfs, int, int, fd, struct statfs *,buf)
SYSCALL2(lstat, int, const char *, pathname, struct stat *, buf)
SYSCALL2(stat, int, const char *, pathname, struct stat *, buf)
SYSCALL2(statfs, int, const char *, path, struct statfs *, buf)
SYSCALL2(chmod, int, const char *, path, mode_t, mode)
SYSCALL2(fchmod, int, int, fd, mode_t, mode)
SYSCALL4(fchmodat, int, int, dirfd, const char *, pathname, mode_t, mode, int, flags )
SYSCALL1(umask, mode_t, mode_t, mask)
SYSCALL2(mkdir, int, const char *, pathname, mode_t, mode)
SYSCALL3(mkdirat, int, int, dirfd, const char *, pathname, mode_t, mode)
SYSCALL3(mknod, int, const char *, path, mode_t, mode, dev_t, dev)
SYSCALL4(mknodat, int, int, dirfd, const char *, pathname, mode_t, mode, dev_t, dev)
SYSCALL2(mkfifo, int, const char *, path, mode_t, mode )
SYSCALL3(mkfifoat, int, int, dirfd, const char *, path, mode_t, mode )
SYSCALLSEP(sync)
SYSCALLSEP(open)
SYSCALLSEP(openat)
SYSCALLSEP(fcntl)
SYSCALLSEP(pipe)
SYSCALLSEP(start_thread)
SYSCALLSEP(kill_thread)
SYSCALLSEP(get_process_threads)
SYSCALLSEP(hardware_concurrency)
SYSCALLSEP(uname)
SYSCALLSEP(fault_handler)
SYSCALLSEP(kill_process)
SYSCALLSEP(configure_fault)
SYSCALLSEP(get_fault_config)
SYSCALL1(closedir, int, DIR *, dirp)
SYSCALL1(fdopendir, DIR*, int, fd )
SYSCALL1(opendir, DIR* , const char *, path )
SYSCALL1(dirfd, int, DIR *, dirp)
SYSCALL1(readdir, struct dirent *, DIR *, dirp)
SYSCALL3(readdir_r, int, DIR *, dirp, struct dirent *, entry, struct dirent **, result)
SYSCALLSEP(seekdir, void, DIR *, dirp, long, position)
SYSCALLSEP(rewinddir, void, DIR *, dirp)
SYSCALL1(telldir, long , DIR *, dirp)
SYSCALLSEP(scandir)
SYSCALL3(socket, int, int, domain, int, type, int, protocol )
SYSCALLSEP(socketpair)
SYSCALL3(getsockname, int, int, fd, struct sockaddr *, addr, socklen_t *, addrlen )
SYSCALL3(bind, int, int, fd, const struct sockaddr *, addr, socklen_t, len )
SYSCALL3(connect, int, int, fd, const struct sockaddr *, addr, socklen_t, len )
SYSCALL3(getpeername, int, int, fd, struct sockaddr *, addr, socklen_t *, len )
SYSCALL4(send, ssize_t, int, fd, const void *, buf, size_t, n, int, flags )
SYSCALLSEP(sendto)
SYSCALL2(listen, int, int, fd, int, n )
SYSCALL3(accept, int, int, fd, struct sockaddr *, addr,  socklen_t *, addr_len )
SYSCALL4(accept4, int, int, fd, struct sockaddr *, addr, socklen_t *, addr_len, int, flags )
SYSCALL4(recv, ssize_t, int, fd, void *,buf, size_t, n, int, flags )
SYSCALLSEP(recvfrom)
SYSCALL1(isatty, int, int, fd )
SYSCALL1(ttyname, char *, int, fd )
SYSCALL3(ttyname_r, int, int, fd, char *, buf, size_t, count )
SYSCALL4(_FS_renameitemat, int, int, olddirfd, const char *, oldpath, int, newdirfd, const char *, newpath )
SYSCALL2(_FS_renameitem, int, const char *, oldpath, const char *, newpath )


#undef SYSCALL
#undef SYSCALLSEP
#undef SYSCALL0
#undef SYSCALL1
#undef SYSCALL2
#undef SYSCALL3
#undef SYSCALL4
#undef SYSCALL5
