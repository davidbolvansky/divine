#ifndef MEM
#define MEM const char *
#endif

SYSCALLSEP( get_process_threads, CONTINUE, _DiOS_ThreadHandle *, ( _DiOS_ThreadHandle _1 ) )
SYSCALLSEP( start_thread, CONTINUE, _DiOS_ThreadHandle, ( _DiOS_ThreadRoutine _1, void *_2, int _3 ) )
SYSCALLSEP( get_fault_config, CONTINUE, int, ( int _1 ) )
SYSCALLSEP( configure_fault, CONTINUE, int, ( int _1, int _2 ) )
SYSCALLSEP( register_monitor, CONTINUE, void, ( __dios::Monitor *_1 ) )
SYSCALLSEP( die, RESCHEDULE, void, () )
SYSCALLSEP( kill_thread, RESCHEDULE, void, ( _DiOS_ThreadHandle _1 ) )
SYSCALLSEP( kill_process, RESCHEDULE, void, ( int _1 ) )
SYSCALLSEP( fault_handler, CONTINUE,  void, ( int _1, _VM_Frame * _2, int _3 ) )
SYSCALLSEP( hardware_concurrency, CONTINUE, int, () )
SYSCALLSEP( pipe, CONTINUE, int, ( OUT(int*) _1 ) )
SYSCALLSEP( open, CONTINUE, int, ( const char* _1, int _2, mode_t _3 ) )

SYSCALL( rename,      CONTINUE, int,     ( MEM _1, MEM _2 ) )
SYSCALL( lseek,       CONTINUE, off_t,   ( int _1, off_t _2, int _3 ) )
SYSCALL( syncfs,      CONTINUE, int,     ( int _1 ) )
SYSCALL( accept4,     CONTINUE, int,     ( int _1, STRUCT(struct sockaddr *) _2,
                                           OUT(socklen_t *) _3, int _4 ) )
SYSCALL( creat,       CONTINUE, int,     ( MEM _1, mode_t _2 ) )
SYSCALL( linkat,      CONTINUE, int,     ( int _1, MEM _2, int _3, MEM _4, int _5 ) )
SYSCALL( mkdir,       CONTINUE, int,     ( MEM _1, mode_t _2 ) )
SYSCALL( sync,        CONTINUE, void,    () )
SYSCALL( chmod,       CONTINUE, int,     ( MEM _1, mode_t _2 ) )
SYSCALL( renameat,    CONTINUE, int,     ( int _1, MEM _2, int _3, MEM _4 ) )
SYSCALL( uname,       CONTINUE, int,     ( struct utsname * _1 ) )
SYSCALL( mknod,       CONTINUE, int,     ( MEM _1, mode_t _2, dev_t _3 ) )
SYSCALL( symlinkat,   CONTINUE, int,     ( MEM _1, int _2, MEM _3 ) )
SYSCALL( kill,      RESCHEDULE, int,     ( pid_t _1, int _2 ) )
SYSCALL( connect,     CONTINUE, int,     ( int _1, COUNT(const struct sockaddr *) _2, socklen_t _3 ) )
SYSCALL( getsockname, CONTINUE, int,     ( int _1, STRUCT(struct sockaddr *) _2, OUT(socklen_t *) _3 ) )
SYSCALL( close,       CONTINUE, int,     ( int _1 ) )
SYSCALL( recvfrom,    CONTINUE, ssize_t, ( int _1, void * _2, size_t _3, int _4,
                                           STRUCT(struct sockaddr *) _5, OUT(socklen_t *) _6 ) )
SYSCALL( fstatfs,     CONTINUE, int,     ( int _1, STRUCT(struct statfs *) _2 ) )
SYSCALL( write,       CONTINUE, ssize_t, ( int _1, COUNT(const void *) _2, size_t _3 ) )
SYSCALL( bind,        CONTINUE, int,     ( int _1, COUNT(const struct sockaddr *) _2, socklen_t _3 ) )
SYSCALL( fchmodat,    CONTINUE, int,     ( int _1, MEM _2, mode_t _3, int _4 ) )
SYSCALL( lstat,       CONTINUE, int,     ( MEM _1, STRUCT(struct stat *) _2 ) )
SYSCALL( umask,       CONTINUE, mode_t,  ( mode_t _1 ) )
SYSCALL( access,      CONTINUE, int,     ( MEM _1, int _2 ) )
SYSCALL( faccessat,   CONTINUE, int,     ( int _1, MEM _2 , int _3, int _4 ) )
SYSCALL( fchmod,      CONTINUE, int,     ( int _1, mode_t _2 ) )
SYSCALL( rmdir,       CONTINUE, int,     ( MEM _1 ) )
SYSCALL( accept,      CONTINUE, int,     ( int _1, STRUCT(struct sockaddr *) _2, OUT(socklen_t *) _3 ) )
SYSCALL( dup,         CONTINUE, int,     ( int _1 ) )
SYSCALL( fdatasync,   CONTINUE, int,     ( int _1 ) )
SYSCALL( fstat,       CONTINUE, int,     ( int _1, STRUCT(struct stat *) _2 ) )
SYSCALL( getpid,      CONTINUE, pid_t,   () )
SYSCALL( fcntl,       CONTINUE, int,     ( int _1, int _2, va_list *_3 ) )
SYSCALL( stat,        CONTINUE, int,     ( MEM _1, STRUCT(struct stat *) _2 ) )
SYSCALL( getcwd,      CONTINUE, char*,   ( COUNT(char*) _1, size_t _2 ) )
SYSCALL( truncate,    CONTINUE, int,     ( MEM _1, off_t _2 ) )
SYSCALL( dup2,        CONTINUE, int,     ( int _1, int _2 ) )
SYSCALL( read,        CONTINUE, ssize_t, ( int _1, COUNT(void *) _2, size_t _3 ) )
SYSCALL( openat,      CONTINUE, int,     ( int _1, const char * _2, int, mode_t _3 ) )
SYSCALL( sendto,      CONTINUE, ssize_t, ( int _1, COUNT(const void *) _2, size_t _3, int _4,
                                           COUNT(const struct sockaddr *) _5, socklen_t _6 ) )
SYSCALL( symlink,     CONTINUE, int,     ( MEM _1, MEM _2 ) )
SYSCALL( readlink,    CONTINUE, ssize_t, ( MEM _1, COUNT(char *) _2, size_t _3 ) )
SYSCALL( fchdir,      CONTINUE, int,     ( int _1 ) )
SYSCALL( ftruncate,   CONTINUE, int,     ( int _1, off_t _2 ) )
SYSCALL( getpeername, CONTINUE, int,     ( int _1, STRUCT(struct sockaddr *) _2, OUT(socklen_t *) _3 ) )
SYSCALL( unlink,      CONTINUE, int,     ( MEM _1 ) )
SYSCALL( sigaction,   CONTINUE, int,     ( int _1, const struct ::sigaction * _2,
                                           struct ::sigaction * _3 ) )
SYSCALL( unlinkat,    CONTINUE, int,     ( int _1, MEM _2, int _3 ))
SYSCALL( mknodat,     CONTINUE, int,     ( int _1, MEM _2, mode_t _3, dev_t _4 ) )
SYSCALL( readlinkat,  CONTINUE, ssize_t, ( int _1, MEM _2, COUNT(char *) _3, size_t _4 ) )
SYSCALL( chdir,       CONTINUE, int,     ( MEM _1 ) )
SYSCALL( recv,        CONTINUE, ssize_t, ( int _1, void * _2, size_t _3 , int _4 ) )
SYSCALL( socket,      CONTINUE, int,     ( int _1, int _2, int _3 ) )
SYSCALL( fsync,       CONTINUE, int,     ( int _1 ) )
SYSCALL( statfs,      CONTINUE, int,     ( MEM _1, STRUCT(struct statfs *) _2 ) )
SYSCALL( socketpair,  CONTINUE, int,     ( int _1, int _2, int _3, OUT(int *) _4 ) )
SYSCALL( link,        CONTINUE, int,     ( MEM _1, MEM _2 ) )
SYSCALL( listen,      CONTINUE, int,     ( int _1, int _2 ) )
SYSCALL( mkdirat,     CONTINUE, int,     ( int _1, MEM _2, mode_t _3 ) )

#undef MEM