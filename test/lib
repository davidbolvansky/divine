# -*- sh -*-

not() { "$@" && exit 1 || return 0; }
map() { divine map --report "$@" 2> progress | tee report; }
ndfs() { divine nested-dfs --report "$@" 2> progress | tee report; }
owcty() { divine owcty --report "$@" 2> progress | tee report; }
reachability() { divine reachability --report "$@" 2> progress | tee report; }
metrics() { divine metrics --report "$@" 2> progress | tee report; }

mpi() {
    $MPIEXEC >& /dev/null || exit 200; # probably not found
    $MPIEXEC -H localhost,localhost divine "$@" --report 2> progress | tee report
}

for_dve_small() {
    wrapper=$1
    shift

    check clear
    $wrapper data/test1.dve "$@"
    check ltl_invalid
    check statespace 7 15 3 0

    check clear
    $wrapper data/test2.dve "$@"
    check ltl_valid
    check owcty_sizes 2 2 0
    check statespace 3 3 2 2

    check clear
    $wrapper data/test3.dve "$@"
    check ltl_valid
    check owcty_sizes 2 5 0
    check statespace 6 13 2 0

    check clear
    $wrapper data/test4.dve "$@"
    check ltl_invalid
    check owcty_sizes 1 4 1
    check statespace 5 6 1 0

    check clear
    $wrapper data/test5.dve "$@"
    check ltl_invalid
    check owcty_sizes 1 4 1
    check statespace 5 6 1 0

    check clear
    $wrapper data/test6.dve "$@"
    check ltl_invalid
    check owcty_sizes 2 6 1 5 1
    check statespace 6 7 2 0
}

unwrap() {
    file=$1
    shift
    "$@" "$file"
}

dve_small() {
    for_dve_small unwrap "$@"
}

compile() {
    file=$1
    shift

    divine compile $file
    "$@" `basename $file.so`
}

dve_compiled_small() {
    for_dve_small compile "$@"
}

llvm_small() {
    :
}

coin_small() {
    :
}

all_small() {
    dve_small "$@"
    llvm_small "$@"
    coin_small "$@"
}

chmod +x check
PATH=".:$PATH"
set -vex -o pipefail
trap "check debris" EXIT

