#!/usr/bin/perl
use strict;

my $fn = $ARGV[0];
my $ext = "c";
$ext = "cpp" if $fn =~ m,\.cpp$,;
my $dir = $fn;
$dir =~ s,(^|/)([^/]*)$,,;
my $basename = $2;
my $file = `cat $fn`;

# copy over any #include files
my $cc = "$ENV{OBJ}toolchain/clang/bin/clang";
$cc = "$cc++ -std=c++14" if $ext eq "cpp";
my $cflags = "-isystem $ENV{SRCDIR}/dios/include -isystem $ENV{BINDIR}/dios/include -D__divine__";
$cflags .= " $2" if ( $file =~ m,^(/\*|//) CC_OPTS: (.*?)(\*/)?$,sm );
$cflags =~ s,\$SRC_ROOT,$ENV{SRCDIR},g;

my $extras = `cd $dir && $cc -MM -MT "" $basename $cflags`;
$extras =~ s,\\\n,,g;
$extras =~ s,^: [^ ]*,,; # chop off the file itself
for my $name ( split /\s+/, $extras )
{
    next unless $name;
    next if ( $name =~ m,^/, );
    my $subdir = $name;
    $subdir =~ s,(^|/)[^/]*$,,;
    system( "mkdir -p $subdir" ) if $subdir;
    system( "cp $dir/$name $name" );
}

# generate the variants
my @var = grep { m#^// V: # } (split /\n/, $file);

for ( @var )
{
    my %d;
    for my $field ( "V", "CC_OPT", "V_OPT", "TAGS", "ERR" )
    {
        m,$field: (.*?)\s*(\s(V_OPT|CC_OPT|TAGS|RESULT|ERR):|$),;
        $d{$field} = $1;
    }
    my $new = $file;
    $new =~ s,TAGS: ,TAGS: $d{TAGS} ,; # only the first match
    $new =~ s,VERIFY_OPTS: ,VERIFY_OPTS: $d{V_OPT} ,;
    $new =~ s,CC_OPTS: ,CC_OPTS: $d{CC_OPT} ,;
    my @nameparts = split /\./, $d{V};
    for my $i (0 .. $#nameparts) {
        my $prefix = join ".", @nameparts[0..$i];
        $new =~ s,/\* ERR_$prefix \*/,/* ERROR */,;
    }
    open F, ">$d{V}.$ext";
    print F $new;
    print F "/* ERRSPEC: $d{ERR} */" if defined $d{ERR};
    close F;
}
