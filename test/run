#!/bin/sh

ann() {
    echo "% $@" 1>&2
    eval "$@"
}

capture() { tee report | sed -e "s,^,  | ,"; }

map() { ann "divine verify --map --report" "$@" "2> progress | capture"; }
ndfs() { ann "divine verify --nested-dfs --report" "$@" "2> progress | capture"; }
owcty() { ann "divine verify --owcty --report" "$@" "2> progress | capture"; }
reachability() { ann "divine verify --reachability --report" "$@" "2> progress | capture"; }
metrics() { ann "divine metrics --report" "$@" "2> progress | capture"; }
verify() { ann "divine verify --report" "$@" "2> progress | capture"; }
draw() { ann "divine draw" "$@"; }
info() { ann "divine info" $(echo "$@" | sed -e "s,--property=[^ ]*\|--no-reduce,,g"); }

mpi() {
    test "$O_MPI" = "ON" || exit 200;
    "$MPIEXEC" > /dev/null 2>&1 || exit 200; # probably not found
    ann "$MPIEXEC -H localhost,localhost divine" "$@" "--report 2> progress | capture"
}

fixreduce() {
    if echo "$@" | grep -q "reduce="; then
        "$@"
    else
        "$@" --no-reduce
    fi
}

identity() {
    file=$1
    property=$2
    shift 2
    fixreduce "$@" "$property" "$file"
}

dve_compile() {
    file=$1
    property=$2
    shift 2

    ann divine compile $file
    fixreduce "$@" "$property" `basename $file.so`
}

llvm_assemble() {
    file=$1
    property=$2
    shift 2

    out=`basename $file .ll`.bc
    ann llvm-as -o=$out $file
    fixreduce "$@" "$property" $out
}

"$@"
