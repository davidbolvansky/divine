Overview
========

DIVINE is a tool for LTL model checking and reachability analysis of discrete
distributed systems. The tool can efficiently exploit aggregate computing power
of multiple network-interconnected multi-cored workstations in order to deal
with extremely large verification tasks. As such it allows to analyse systems
whose size would be prohibitive for sequential, single-machine tools.

 * Verifies models in multiple input formats:
    - LLVM bitcode (suitble for model checking C and C++ code)
    - UPPAAL timed automata
    - DVE -- the original DiVinE modelling languageg
    - user-implemented, compiled models via [CESMI] [3]
    - Murphi, including symmetry reduction
    - CoIn -- for modelling with component interaction automata
 * Executes on a cluster of multi-core machines
 * Partial order reduction for DVE, CoIn
 * Partial support for MS Windows (binary installers available)
 * A GUI, with a simulator and counter-example analyser for DVE

Use in Publications
===================

When you refer to DiVinE in an academic paper, we would appreciate if you could
use the following reference (the currently most up-to-date tool paper on
DiVinE):

    @InProceedings{BBCR10,
       author = "J. Barnat and L. Brim and M. \v{C}e\v{s}ka and P. Ro\v{c}kai",
       title = "{DiVinE: Parallel Distributed Model Checker (Tool paper)}",
       booktitle = "Parallel and Distributed Methods in Verification and High
                    Performance Computational Systems Biology
                    (HiBi/PDMC 2010)",
       pages = "4--7",
       year = "2010",
       publisher = "IEEE"
   }

DiVinE 3.0 RC 1 has been released
=================================

(2013-04-16) A release candidate has been released today (unless serious bugs
are found in this release, it will become 3.0 final). Get the [source code] [1]
or [pre-built binaries] [2]! The changelog is here: [what's
new](whatsnew.html). The major highlights are:

 * Support for model checking of C and C++ code via LLVM bitcode (safety and LTL).
 * Model checking of timed automata (safety, time deadlocks and untimed LTL).
 * A stable binary interface for compiled models: [CESMI] [3].
 * Weak fairness for DVE.
 * Hash compaction.
 * Experimental support for shared-memory hashtables and queues.

Version 2.5 Now Available
=========================

**(2011-04-05) UPDATE**: A minor revision to 2.5 has been released, with
version number 2.5.1, and fixing a few important bugs in the DVE compiler. All
users of the DVE compiler are strongly advised to update to this version.

(2011-03-01) The DIVINE team has released a new version of its parallel LTL
model checking tool. This version brings further improvements in verification
performance, as well as a few new major features:

 * A new command, "divine draw" has been added to the suite of support tools,
   enabling graphviz-based visualisation of model state spaces and
   counterexample traces. The graphviz package needs to be installed to make
   this functionality available. Please see divine draw --help for usage
   instructions.

 * A new input language, CoIN is now available for use with DiVinE.

   Component-interaction automata language (CI Automata, or CoIn Automata for
   short) was designed for modelling of component interactions in hierarchical
   component-based software systems. The language supports modelling of
   important interaction attributes of such systems, and hence provides a rich
   base for further application of formal methods. Component-based systems,
   that are to be modelled, are usually connected to a particular component
   model. For this reason, Component-interaction automata are very general and
   support modelling of component interactions in component-based systems built
   on various component models.

 * Support for the Windows platform has been further improved, with "divine
   combine" now being available, completing the toolchain for model development
   and model checking.

Moreover, a number of bugfixes and minor improvements have been made in this
release. You can [**download the new version here**] [1].

[1]: download.html
[2]: http://divine.fi.muni.cz/hydra/jobset/divine/release
[3]: manual.html#common-explicit-state-model-interface
[4]: http://divine.fi.muni.cz/trac/ticket/152
[5]: http://divine.fi.muni.cz/trac/ticket/118
